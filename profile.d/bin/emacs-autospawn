#!/bin/bash

##################################################
# Script created to spawn an emacs editor
# 
# This script was created to join two beautiful
# programs such as screen and emacs.
# 
# The script checks whether emacs is running within
# a screen or not. If it is, then this script does
# absolutely nothing.
# If it is not, it starts a screen in background
# (`screen -U -dmS emacs emacs`).
# Anyway, as a side effect, this script echoes
# the PID of the current (or new)
# emacs-within-screen process so it can be called
# by my emacs launcher, 'e'.
#
# Return values:
#  * 1: emacs is already running in a screen
#  * 0: emacs has just been spawned
##################################################
## Author: Santiago Saavedra LÃ³pez.
## License: GNU General Public License version 3
##################################################

TMP=${TMPDIR:-/tmp}
scd="$TMP/screen-emacs"
mkdir -p $scd
chmod 700 $scd

export SCREENDIR=$scd



function emacs-running-p () {

# Take only meaningful lines
pid=$(screen -ls | grep [\0-9\]\\. |sed -E -e "s/^[^0-9]+([0-9]+)\..*$/\1/g")

if [[ "x${pid}" = "x" ]]; then
	return 1
else
	echo $pid
	return 0
fi


}


#
#
#function emacs-getpid () {
#echo $SCREENDIR
#	out=$(screen -ls)
#	status=$?
#
#	if [[ $status != 1 ]]; then
#		pid=$(echo $out | grep \.emacs | sed -E -e "s/^[^0-9]+([0-9]+)\.emacs.*$/\1/g")
#		return 0
#	else
#		return 1
#	fi
#}
#
#function emacs-running-p () {
##pid=$(SCREENDIR=$scd screen -ls | grep emacs | sed -E -e "s/^[^0-9]+([0-9]+)\.emacs.*$/\1/g")
#emacs-getpid
#
#echo $status , $out
#
#	if [[ $status -ne 0 ]]; then
#		return $status
#	else
#		echo $pid
#		return 0
#	fi
#
#	if [ "$pid" != "" ]; then
#		if [ -n "$1" ]; then
#			echo $pid
#		fi
#		return 0
#	else
#		return 1
#	fi
#}

spawn-emacs () {
#    screen -U -DmS emacs emacs
	screen -U -dmS emacs emacs
	emacs-running-p verbose
}


if emacs-running-p verbose; then
	exit 1
else
	spawn-emacs
	exit 0
fi


